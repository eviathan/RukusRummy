worker_processes 1; # Single worker process in a container environment

events {
    worker_connections 1024; # Default value which should suffice for most cases
}

http {
    # Set up mime types, SSL, and logging settings
    include       /etc/nginx/mime.types;
    default_type application/octet-stream;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Use modern TLS protocols, omit if you need to support older versions
    ssl_prefer_server_ciphers on;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost; # or your domain

        # Redirect all HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost; # or your domain name

        ssl_certificate /etc/nginx/certs/domain.crt;
        ssl_certificate_key /etc/nginx/certs/domain.key;
        ssl_password_file /etc/nginx/certs/passphrase.txt;

        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass         http://localhost:5001;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # location /identity/ {
        #     proxy_pass         http://localhost:5002;
        #     proxy_http_version 1.1;
        #     proxy_set_header   Upgrade $http_upgrade;
        #     proxy_set_header   Connection keep-alive;
        #     proxy_set_header   Host $host;
        #     proxy_cache_bypass $http_upgrade;
        # }
    }
}
